from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import app.Keyboard as kb 
import app.TranslateFun.TranslateFun as TF

from app.Classactivity import *

from app.Handlers import *
router = Router()

@router.message(StepsForms.CHOSENLANGUAGE)

async def choose_language(message: Message,state: FSMContext):
    
    if message.text in "English üá¨üáß":
        lang = "en"
        await message.answer(await TF.Translation("–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —è–∑—ã–∫!",lang),reply_markup=ReplyKeyboardRemove())
        await state.update_data(lang=lang)
        buttons = [
            [KeyboardButton(text=await TF.Translation("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—á—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—â—å",lang))],
            [KeyboardButton(text=await TF.Translation("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",lang))],
        ]

        buttonskb = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True,
                                                input_field_placeholder=await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang))
        await message.answer(await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang), reply_markup=buttonskb)

        await state.set_state(StepsForms.CHOSENACTIVITY)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞—Ç—Ä–∏–±—É—Ç –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ –æ–±—ä–µ–∫—Ç
    elif message.text in "Russian üá∑üá∫":
        lang = 'ru'
        await message.answer(await TF.Translation("–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —è–∑—ã–∫!",lang),reply_markup=ReplyKeyboardRemove())
        await state.update_data(lang=lang)
        buttons = [
            [KeyboardButton(text=await TF.Translation("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—á—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—â—å",lang))],
            [KeyboardButton(text=await TF.Translation("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",lang))],
        ]

        buttonskb = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True,
                                                input_field_placeholder=await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang))
        await message.answer(await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang), reply_markup=buttonskb)
        await state.set_state(StepsForms.CHOSENACTIVITY)
        # —Ä—É—Å—Å–∫–∏–π
    elif message.text in "Japanese üáØüáµ":
        lang = 'ja'
        await message.answer(await TF.Translation("–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —è–∑—ã–∫!",lang),reply_markup=ReplyKeyboardRemove())
        await state.update_data(lang=lang)
        buttons = [
            [KeyboardButton(text=await TF.Translation("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—á—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—â—å",lang))],
            [KeyboardButton(text=await TF.Translation("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",lang))],
        ]

        buttonskb = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True,
                                                input_field_placeholder=await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang))
        await message.answer(await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang), reply_markup=buttonskb)
        await state.set_state(StepsForms.CHOSENACTIVITY)
        # –∞–Ω–∏–º–µ—à–Ω—ã–π
    elif message.text in "Chinese üá®üá≥":
        lang = 'zh-cn'
        await message.answer(await TF.Translation("–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —è–∑—ã–∫!",lang),reply_markup=ReplyKeyboardRemove())
        await state.update_data(lang=lang)
        buttons = [
            [KeyboardButton(text=await TF.Translation("–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—á—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º",lang))],
            [KeyboardButton(text=await TF.Translation("–ü–æ–º–æ—â—å",lang))],
            [KeyboardButton(text=await TF.Translation("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",lang))],
        ]

        buttonskb = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True,
                                                input_field_placeholder=await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang))
        await message.answer(await TF.Translation("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",lang), reply_markup=buttonskb)
        await state.set_state(StepsForms.CHOSENACTIVITY)
        # –∫–∏—Ç–∞–π—Å–∫–∏–π
    